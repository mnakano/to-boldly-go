extends template
append stylesheets
	link(rel="stylesheet" href="/stylesheets/template-header.css")
	link(rel="stylesheet" href="/stylesheets/forms.css")
	link(rel="stylesheet" href="/stylesheets/admin-content.css")
block content	
	div(class='form-wrapper')
		h1.
			Edit #{album.albumTitle}
		form(id='new-album', method='POST', enctype="multipart/form-data", action='/adminAlbums/editAlbum/#{album._id}')
			div(class='input-group')
				label(for='albumTitle') Album Title:
				input(id='albumTitle', type='text', placeholder='Title', name='albumTitle', value="#{album.albumTitle}")
				input(type='text', name='albumTitleOld', value="#{album.albumTitle}" style='display:none;')
			div(class='input-group')
				label(for='albumCategory') Album Category:
				select(id='albumCategory', name='albumCategory', value="#{album.albumCategory}")
					- for(var i = 0; i < locals.categories.length; i++){
						- if(album.albumCategory == locals.categories[i].name) {
							option(value=locals.categories[i].name, selected='selected') #{locals.categories[i].name}
						- } else {
							option(value=locals.categories[i].name) #{locals.categories[i].name}
						- }
					- }
			div(class='input-group')
				- var countries = [];
				- for(var i = 0; i < locals.regions.length; i++){
					- for(var k = 0; k < locals.regions[i].countries.length; k++){
						- countries.push(locals.regions[i].countries[k]);
					- }
				- }
				countries.sort();
				label(for='albumCountry') Country:
				select(id='albumCountry', name='country')
					- for(var i = 0; i < countries.length; i++){
						- if(album.country == countries[i]) {
							option(value=countries[i], selected='selected') #{countries[i]}
						- } else {
							option(value=countries[i]) #{countries[i]}
						- }
					- }
			div(class='input-group')
				label(for='albumRegion') Region:
				select(id='albumRegion', name='region', value="#{album.region}")
					- for(var i = 0; i < locals.regions.length; i++){
						- if(album.region == locals.regions[i].name) {
							option(value=locals.regions[i].name, selected='selected') #{locals.regions[i].name}
						- } else {
							option(value=locals.regions[i].name) #{locals.regions[i].name}
						- }
					- }
			div(class='input-group')
				label(for='albumDate') Date:
				input(id='albumDate', type='date', placeholder='Date', name='albumDate', value="#{album.albumDate}")
			div(class='input-group')
				label(for='journal') Journal Entry:
				textarea(class='jorunal' id='journal', type='text', name='journal' rows='10', cols='30')=album.journal
			div(id='photo-entry-group')
				each photo, p in album.photos
					div(class='photo-entry')
						div(class='input-group photo-table')
							div(class='photo-block')
								input(type='checkbox', name='keepPhoto' value='1' checked='true') 
								span Keep the Current Photo:
								img(name='currentPhotoImg' class='tag-image' src="#{photo.photo}")
								input(type='text', name='currentPhoto', value="#{photo.photo.split('/').slice(-1)[0]}" style='display:none;')
							div(class='photo-block' style="vertical-align:middle; padding-right:50px;")
								span OR
							div(id='photo-upload' class='photo-block') 
								input(type='checkbox', name='keepPhoto' value='0')
								span Upload a New Photo:
								input(class='photo-edit', type='file', placeholder='Photo URL', name='photo')
						div(class='input-group')
							label(for='photo-description') Photo Journal:
							textarea(class='photo-description', type='text' rows='10', cols='30' name='photoDescription')=photo.photoDescription
						if p > 0
							input(class='removePhoto', type='button', value='Remove Photo Entry')
			div(class='input-group buttons')
				input(id='btnAddPhoto', type='button', onClick='addPhotoEntry()', value='Add more photos')
				input(id='btnSubmit', type='submit', value='Submit')